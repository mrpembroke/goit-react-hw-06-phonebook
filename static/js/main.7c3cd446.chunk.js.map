{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","redux/selectors.js","redux/actions.js","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/Container/Container.jsx","App.js","redux/reducers.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","getContacts","state","contacts","items","getFilter","filter","getVisibleContacts","normalizedFilter","toLowerCase","name","includes","addContact","createAction","phone","payload","id","shortid","generate","deleteContact","changeFilter","ContactList","useSelector","dispatch","useDispatch","className","s","contactsList","map","item","closeBtn","type","onClick","actions","onDeleteContact","Nameform","useState","setName","setPhone","handleChange","event","currentTarget","value","nameInputId","phoneInputId","newContacsForm","onSubmit","preventDefault","find","contact","checkRepeatName","checkRepeatPhone","trim","alert","title","label","labelTitle","onChange","placeholder","required","button","Filter","findForm","e","target","Container","children","container","App","createReducer","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","phonebookPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","reducers","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.7c3cd446.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"ContactList_contactsList__3ieOB\",\"item\":\"ContactList_item__23lMi\",\"name\":\"ContactList_name__1v0RM\",\"closeBtn\":\"ContactList_closeBtn__27Ewe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"findForm\":\"Filter_findForm__2tCQJ\",\"title\":\"Filter_title__1gqU5\",\"label\":\"Filter_label__1CpaD\",\"labelTitle\":\"Filter_labelTitle__1Z-8V\"};","export const getContacts = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getVisibleContacts = state => {\r\n  const contacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return contacts.filter(({ name }) =>\r\n    name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n","import { createAction } from '@reduxjs/toolkit';\r\nimport shortid from 'shortid';\r\n\r\nexport const addContact = createAction('phonebook/add', (name, phone) => ({\r\n  payload: {\r\n    id: shortid.generate(),\r\n    name,\r\n    phone,\r\n  },\r\n}));\r\n\r\nexport const deleteContact = createAction('phonebook/delete');\r\nexport const changeFilter = createAction('phonebook/changeFilter');\r\n","import React from 'react';\r\nimport s from './ContactList.module.css';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getVisibleContacts } from '../../redux/selectors';\r\nimport * as actions from '../../redux/actions';\r\n\r\nexport default function ContactList() {\r\n  const contacts = useSelector(getVisibleContacts);\r\n  const dispatch = useDispatch();\r\n  const onDeleteContact = id => dispatch(actions.deleteContact(id));\r\n\r\n  return (\r\n    <ul className={s.contactsList}>\r\n      {contacts.map(({ id, name, phone }) => (\r\n        <li key={id} className={s.item}>\r\n          <span className={s.name}>{name}</span>: {phone}\r\n          <button\r\n            className={s.closeBtn}\r\n            type=\"button\"\r\n            onClick={() => onDeleteContact(id)}\r\n          >\r\n            X\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { getContacts } from '../../redux/selectors';\r\nimport { addContact } from '../../redux/actions';\r\n\r\nimport s from './ContactForm.module.css';\r\nimport shortid from 'shortid';\r\n\r\nexport default function Nameform() {\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n\r\n  const handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'phone':\r\n        setPhone(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const resetinput = () => {\r\n    setName('');\r\n    setPhone('');\r\n  };\r\n\r\n  const checkRepeatName = name => {\r\n    return contacts.find(\r\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\r\n    );\r\n  };\r\n\r\n  const checkRepeatPhone = phone => {\r\n    return contacts.find(contact => contact.phone === phone);\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    if (checkRepeatName(name)) {\r\n      alert(`${name} is already added.`);\r\n    } else if (checkRepeatPhone(phone)) {\r\n      alert(`${phone} is already added.`);\r\n    } else if (name.trim() === '' || phone.trim() === '') {\r\n      alert('All of inputs must be not empty');\r\n    } else {\r\n      dispatch(addContact(name, phone));\r\n    }\r\n    resetinput();\r\n  };\r\n\r\n  const nameInputId = shortid.generate();\r\n  const phoneInputId = shortid.generate();\r\n\r\n  return (\r\n    <>\r\n      <form className={s.newContacsForm} onSubmit={handleSubmit}>\r\n        <h2 className={s.title}>Add new contacts:</h2>\r\n        <label className={s.label}>\r\n          <span className={s.labelTitle}>Name:</span>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={handleChange}\r\n            id={nameInputId}\r\n            placeholder=\"input name\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <label className={s.label}>\r\n          <span className={s.labelTitle}>Phone:</span>\r\n          <input\r\n            type=\"text\"\r\n            name=\"phone\"\r\n            value={phone}\r\n            onChange={handleChange}\r\n            id={phoneInputId}\r\n            placeholder=\"input number\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <button className={s.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { getFilter } from '../../redux/selectors';\r\nimport * as actions from '../../redux/actions';\r\nimport s from './Filter.module.css';\r\n\r\nexport default function Filter() {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  const onChange = e => dispatch(actions.changeFilter(e.target.value));\r\n\r\n  return (\r\n    <div className={s.findForm}>\r\n      <h2 className={s.title}>Find contacts:</h2>\r\n      <label className={s.label}>\r\n        <span className={s.labelTitle}>2find:</span>\r\n        <input\r\n          type=\"text\"\r\n          onChange={onChange}\r\n          value={value}\r\n          name=\"filter\"\r\n          placeholder=\"input name\"\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport s from './Container.module.css';\r\n\r\nexport default function Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n","import ContactList from './components/ContactList';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport Container from './components/Container';\nimport './App.css';\n\nexport default function App() {\n  return (\n    <Container>\n      <h1 className=\"title\">My Phonebook </h1>\n      {/* <h2 className=\"subtitle\">Add new contact</h2> */}\n      <ContactForm />\n      {/* <h2 className=\"subtitle\">Find contact</h2> */}\n      <Filter /*value={filter} onChange={changeFilter} */ />\n      <h2 className=\"subtitle\">My contacts:</h2>\n      <ContactList /*contacts = { getVisibleContacts() }\n         onDeleteContact = {deleteContact}*/\n      />\n    </Container>\n  );\n}\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { addContact, deleteContact, changeFilter } from './actions';\r\n\r\nconst initialContactlist = [\r\n  { id: 'id-1', name: 'John Piters', phone: '555-55-55' },\r\n  { id: 'id-2', name: 'Piter Johnson', phone: '444-44-44' },\r\n  { id: 'id-3', name: 'Pit Ivans', phone: '333-33-33' },\r\n  { id: 'id-4', name: 'Ivan Piterson', phone: '222-22-22' },\r\n];\r\n\r\nconst items = createReducer(initialContactlist, {\r\n  [addContact]: (state, { payload }) => [...state, payload],\r\n  [deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (state, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport reducers from './reducers';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst phonebookPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(phonebookPersistConfig, reducers),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newContacsForm\":\"ContactForm_newContacsForm__1JzW4\",\"title\":\"ContactForm_title__3BQSR\",\"label\":\"ContactForm_label__1LAbs\",\"labelTitle\":\"ContactForm_labelTitle__1vxos\",\"button\":\"ContactForm_button__2TJFt\"};"],"sourceRoot":""}